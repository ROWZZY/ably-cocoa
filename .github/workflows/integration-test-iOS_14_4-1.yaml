name: "Integration Test: iOS 14.4 (workflow 1)"
on:
  pull_request:
  push:
    branches:
      - main
# IMPORTANT NOTES:
# - Changes made to this file needs to replicated across other integration-test-*.yaml files.
# - The Fastlane lane name is duplicated in more than one place within this workflow.
jobs:
  check-1:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-1.tar.gz
          path: xcresult-bundles.tar.gz
  check-2:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-2.tar.gz
          path: xcresult-bundles.tar.gz
    needs:
      - check-1
  check-3:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-3.tar.gz
          path: xcresult-bundles.tar.gz
    needs:
      - check-2
  check-4:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-4.tar.gz
          path: xcresult-bundles.tar.gz
    needs:
      - check-3
  check-5:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-5.tar.gz
          path: xcresult-bundles.tar.gz
    needs:
      - check-4
  check-6:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-6.tar.gz
          path: xcresult-bundles.tar.gz
    needs:
      - check-5
  check-7:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-7.tar.gz
          path: xcresult-bundles.tar.gz
    needs:
      - check-6
  check-8:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-8.tar.gz
          path: xcresult-bundles.tar.gz
    needs:
      - check-7
  check-9:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-9.tar.gz
          path: xcresult-bundles.tar.gz
    needs:
      - check-8
  check-10:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-10.tar.gz
          path: xcresult-bundles.tar.gz
    needs:
      - check-9
  check-11:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-11.tar.gz
          path: xcresult-bundles.tar.gz
    needs:
      - check-10
  check-12:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-12.tar.gz
          path: xcresult-bundles.tar.gz
    needs:
      - check-11
  check-13:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-13.tar.gz
          path: xcresult-bundles.tar.gz
    needs:
      - check-12
  check-14:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-14.tar.gz
          path: xcresult-bundles.tar.gz
    needs:
      - check-13
  check-15:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-15.tar.gz
          path: xcresult-bundles.tar.gz
    needs:
      - check-14
  check-16:
    runs-on: macos-10.15
    env:
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      ABLY_ENV: sandbox
    steps:
      - name: Check out SDK repo
        uses: actions/checkout@v2
      - name: Check out xcparse repo
        uses: actions/checkout@v3
        with:
          repository: ably-forks/xcparse
          ref: emit-test-case-info
          path: xcparse
      - id: get-xcparse-commit-sha
        name: Get xcparse commit SHA
        run: |
          cd xcparse
          echo "::set-output name=sha::$(git rev-parse HEAD)"
      - name: "actions/cache@v3 (xcparse binary)"
        uses: actions/cache@v3
        with:
          path: xcparse/.build/debug/xcparse
          key: ${{ runner.os }}-xcparse-${{ steps.get-xcparse-commit-sha.outputs.sha }}
      - name: Install Dependencies and Run Tests Continuously
        env:
          TEST_OBSERVABILITY_SERVER_AUTH_KEY: ${{ secrets.TEST_OBSERVABILITY_SERVER_AUTH_KEY }}
        run: |
          brew install xcbeautify
          brew install coreutils # for `timeout`
          make submodules
          bundle install
          make update_carthage_dependencies_ios
          Scripts/continuously-run-tests-and-upload-results.sh --lane test_iOS14_4
      - uses: actions/upload-artifact@v3
        with:
          name: xcresult-bundles-16.tar.gz
          path: xcresult-bundles.tar.gz
    needs:
      - check-15
